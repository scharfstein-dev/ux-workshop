# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.
# This workflow will build a Java project with Gradle and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-gradle

name: Java CI with Gradle

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:

    runs-on: ubuntu-latest
    permissions:
      contents: read

    steps:
    - uses: actions/checkout@v4
    - name: Set up JDK 21
      uses: actions/setup-java@v4
      with:
        java-version: '21'
        distribution: 'temurin'

    # Configure Gradle for optimal use in GitHub Actions, including caching of downloaded dependencies.
    # See: https://github.com/gradle/actions/blob/main/setup-gradle/README.md
    - name: Setup Gradle
      uses: gradle/actions/setup-gradle@417ae3ccd767c252f5661f1ace9f835f9654f2b5 # v3.1.0

    - name: Build with Gradle Wrapper
      run: ./gradlew build

    - name: Teamscale Upload
      uses: cqse/teamscale-upload-action@v9.2.1
      with:
        # The url under which the Teamscale server can be reached.
        server: https://g1.teamscale.dev/
        # The project ID to which to upload the data.
        project: ux-workshop
        # The username used to perform the upload. Must have the "Perform External Uploads" permission for the given Teamscale project.
        user: scharfstein-dev
        # The partition into which the data is inserted in Teamscale. Successive uploads into the same partition will overwrite the data previously inserted there, so use different partitions if you would instead like to merge data from different sources (e.g. one for Findbugs findings and one for JaCoCo coverage).
        partition: Unit Test
        # The IDE access key of the given user. Can be retrieved in Teamscale under Admin > Users.
        accesskey: ${{ secrets.TEAMSCALE_ACCESS_KEY }}
        # # The file format of the reports which are specified as command line arguments. See http://cqse.eu/upload-formats for a full list of supported file formats.
        # format: # optional
        # # The version control commit for which you obtained the report files. E.g. if you obtained a test coverage report in your CI pipeline, then this is the commit the CI pipeline built before running the tests. Can be either a Git SHA1, a SVN revision number or an Team Foundation changeset ID.
        # revision: # optional
        # # When using the revision parameter, this parameter allows to pass a repository name which is used to identify the correct commit in situations where the same revision exists in multiple repositories.
        # repository: # optional
        # # The branch and Unix Epoch timestamp for which you obtained the report files. E.g. if you obtained a test coverage report in  your CI pipeline, then this is the branch and the commit timestamp of the commit that the CI pipeline built before running the tests. The timestamp must be milliseconds since 00:00:00 UTC Thursday, 1 January 1970 or the string HEAD to upload to the latest revision on that branch. 
        # branch-and-timestamp: # optional
        # # Moves the upload timestamp to right after the last commit.
        # move-to-last-commit: # optional
        # # The message for the commit created in Teamscale for this upload. Will be visible in the Activity perspective. Defaults to a message containing useful meta-information about the upload and the machine performing it.
        # message: # optional
        # # A file which contains additional report file patterns.
        # input: # optional
        # # Causes SSL certificates to be accepted without validation, which makes using this tool with self-signed or invalid certificates easier.
        # insecure: # optional, default is false
        # # A Java keystore file and its corresponding password. The keystore contains additional certificates that should be trusted when performing SSL requests. Separate the path from the password with a semicolon, e.g: /path/to/keystore.jks;PASSWORD The path to the keystore must not contain a semicolon. When this option is used, --validate-ssl will automatically be enabled as well.
        # trusted-keystore: # optional
        # # Appends the given line to the message. Use this to augment the autogenerated message instead of replacing it. You may specify multiple lines separated by space to append several lines to the message (e.g., "1 3 10")
        # append-to-message: # optional
        # # Enables printing stack traces in all cases where errors occur. Used for debugging.
        # stacktrace: # optional, default is false
        # # Path(s) or pattern(s) of the report files to upload. Alternatively, you may provide input files via the input parameter.
        # files: # optional
        

    # NOTE: The Gradle Wrapper is the default and recommended way to run Gradle (https://docs.gradle.org/current/userguide/gradle_wrapper.html).
    # If your project does not have the Gradle Wrapper configured, you can use the following configuration to run Gradle with a specified version.
    #
    # - name: Setup Gradle
    #   uses: gradle/actions/setup-gradle@417ae3ccd767c252f5661f1ace9f835f9654f2b5 # v3.1.0
    #   with:
    #     gradle-version: '8.5'
    #
    # - name: Build with Gradle 8.5
    #   run: gradle build

  dependency-submission:

    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
    - uses: actions/checkout@v4
    - name: Set up JDK 21
      uses: actions/setup-java@v4
      with:
        java-version: '21'
        distribution: 'temurin'

    # Generates and submits a dependency graph, enabling Dependabot Alerts for all project dependencies.
    # See: https://github.com/gradle/actions/blob/main/dependency-submission/README.md
    - name: Generate and submit dependency graph
      uses: gradle/actions/dependency-submission@417ae3ccd767c252f5661f1ace9f835f9654f2b5 # v3.1.0
